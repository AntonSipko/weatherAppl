{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Documents\\\\Programming\\\\React-CW\\\\react-project\\\\src\\\\components\\\\Input.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { Alert } from \"./Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Input = _ref => {\n  _s();\n  let {\n    submitFn,\n    placeHolder,\n    buttonName\n  } = _ref;\n  const inputElement = useRef(null);\n  const [message, setMessage] = useState('');\n  function inputProcess() {\n    const tempMessage = submitFn(inputElement.current.value);\n    if (!tempMessage) {\n      inputElement.current.value = '';\n    }\n    setMessage(tempMessage);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: placeHolder,\n      ref: inputElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: inputProcess,\n      children: buttonName || \"GO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n_s(Input, \"SEzI97v3/DCiUBzjyAmx8OlKAMQ=\");\n_c = Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useRef","useState","Alert","jsxDEV","_jsxDEV","Input","_ref","_s","submitFn","placeHolder","buttonName","inputElement","message","setMessage","inputProcess","tempMessage","current","value","children","type","placeholder","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Pavel/Documents/Programming/React-CW/react-project/src/components/Input.tsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport { Alert } from \"./Alert\";\ntype Props = {\n    submitFn: (value: string)=>string;\n    placeHolder: string;\n    buttonName?: string;\n}\nexport const Input: React.FC<Props> = ({submitFn, placeHolder, buttonName}) => {\n    const inputElement = useRef<HTMLInputElement>(null);\n    const [message, setMessage] = useState<string>('')\n    \n    function inputProcess() {\n        const tempMessage = submitFn(inputElement.current!.value);\n        if(!tempMessage) {\n            inputElement.current!.value=''\n        }\n       setMessage(tempMessage);\n    }\n    return <div>\n        <input type=\"text\" placeholder={placeHolder} ref={inputElement}/>\n        <button onClick={inputProcess}>{buttonName || \"GO\"}</button>\n        {message && <Alert message={message}/>}\n    </div>\n\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAcC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACxD,SAASC,KAAK,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMhC,OAAO,MAAMC,KAAsB,GAAGC,IAAA,IAAyC;EAAAC,EAAA;EAAA,IAAxC;IAACC,QAAQ;IAAEC,WAAW;IAAEC;EAAU,CAAC,GAAAJ,IAAA;EACtE,MAAMK,YAAY,GAAGX,MAAM,CAAmB,IAAI,CAAC;EACnD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAElD,SAASa,YAAYA,CAAA,EAAG;IACpB,MAAMC,WAAW,GAAGP,QAAQ,CAACG,YAAY,CAACK,OAAO,CAAEC,KAAK,CAAC;IACzD,IAAG,CAACF,WAAW,EAAE;MACbJ,YAAY,CAACK,OAAO,CAAEC,KAAK,GAAC,EAAE;IAClC;IACDJ,UAAU,CAACE,WAAW,CAAC;EAC1B;EACA,oBAAOX,OAAA;IAAAc,QAAA,gBACHd,OAAA;MAAOe,IAAI,EAAC,MAAM;MAACC,WAAW,EAAEX,WAAY;MAACY,GAAG,EAAEV;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACjErB,OAAA;MAAQsB,OAAO,EAAEZ,YAAa;MAAAI,QAAA,EAAER,UAAU,IAAI;IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU,EAC3Db,OAAO,iBAAIR,OAAA,CAACF,KAAK;MAACU,OAAO,EAAEA;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpC;AAEV,CAAC;AAAAlB,EAAA,CAjBYF,KAAsB;AAAAsB,EAAA,GAAtBtB,KAAsB;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}