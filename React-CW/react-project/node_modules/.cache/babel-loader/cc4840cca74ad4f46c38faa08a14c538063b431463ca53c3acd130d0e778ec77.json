{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Documents\\\\Programming\\\\React-CW\\\\react-project\\\\src\\\\components\\\\Timer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport timeZones from \"../time-zones\";\nimport { Input } from \"./Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Timer = _ref => {\n  _s();\n  let {\n    cityCountry\n  } = _ref;\n  const styles = {\n    backgroundColor: \"lightblue\",\n    fontSize: \"2em\"\n  };\n  const [time, setTime] = useState(new Date());\n  const [inputCityCountry, setCityCountry] = useState(cityCountry);\n  const timeZone = useRef();\n  function tic() {\n    setTime(new Date());\n  }\n  useEffect(() => {\n    timeZone.current = getTimeZone(cityCountry);\n  }, [cityCountry]);\n  useEffect(() => {\n    const interval = setInterval(tic, 2000);\n    console.log(\"useEffect\");\n    return () => clearInterval(interval);\n  }, []);\n  function getTimeZone(value) {\n    const index = timeZones.findIndex(tz => JSON.stringify(tz).includes(value));\n    console.log(\"getTimeZone\");\n    return index < 0 ? undefined : timeZones[index].name;\n  }\n  function submitFn(inputValue) {\n    const tempZone = getTimeZone(inputValue);\n    let res = '';\n    if (!tempZone) {\n      res = `${inputValue} doesn't exists in the time zones`;\n    } else {\n      timeZone.current = tempZone;\n      setCityCountry(inputValue);\n    }\n    return res;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      submitFn: submitFn,\n      placeHolder: \"Enter city or country\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Current Time in \", inputCityCountry]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles,\n      children: time.toLocaleTimeString(undefined, {\n        timeZone: timeZone.current\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 12\n  }, this);\n};\n_s(Timer, \"wFrgAGlP1ign26IZVfVvoiYI6Js=\");\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","timeZones","Input","jsxDEV","_jsxDEV","Timer","_ref","_s","cityCountry","styles","backgroundColor","fontSize","time","setTime","Date","inputCityCountry","setCityCountry","timeZone","tic","current","getTimeZone","interval","setInterval","console","log","clearInterval","value","index","findIndex","tz","JSON","stringify","includes","undefined","name","submitFn","inputValue","tempZone","res","children","placeHolder","fileName","_jsxFileName","lineNumber","columnNumber","style","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/Pavel/Documents/Programming/React-CW/react-project/src/components/Timer.tsx"],"sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport timeZones from \"../time-zones\";\nimport { Input } from \"./Input\";\ntype Props = {\n    cityCountry:string;\n}\nexport const Timer:React.FC<Props> = ({cityCountry}) => {\nconst styles: React.CSSProperties = {backgroundColor:\"lightblue\",\nfontSize: \"2em\"};\n\nconst [time, setTime] = useState<Date>(new Date());\nconst [inputCityCountry, setCityCountry] = useState<string>(cityCountry);\nconst timeZone = useRef<string|undefined>();\nfunction tic() {\n    setTime(new Date());\n    \n}\nuseEffect(\n () => {\n    timeZone.current = getTimeZone(cityCountry);\n }, [cityCountry]\n)\n\nuseEffect(() => {\n    const interval = setInterval(tic, 2000);\n    console.log(\"useEffect\");\n    return () => clearInterval(interval);\n}, [])\nfunction getTimeZone(value: string): string | undefined{\n    const index = timeZones.findIndex(tz => JSON.stringify(tz).includes(value));\n    console.log(\"getTimeZone\")\n    return index < 0 ? undefined : timeZones[index].name\n} \nfunction submitFn(inputValue: string): string{\n    const tempZone = getTimeZone(inputValue);\n    let res: string = '';\n    if(!tempZone) {\n        res = `${inputValue} doesn't exists in the time zones`\n    } else {\n        timeZone.current = tempZone;\n        setCityCountry(inputValue);\n    }\n    return res;\n\n}\n    return <div>\n        <Input submitFn={submitFn} placeHolder={\"Enter city or country\"}/>\n        <h2 >Current Time in {inputCityCountry}</h2>\n        <p style={styles}>{time.toLocaleTimeString(undefined,\n             {timeZone: timeZone.current})}</p>\n    </div>\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}