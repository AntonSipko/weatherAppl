{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Documents\\\\Programming\\\\React-CW\\\\react-project\\\\src\\\\components\\\\Timer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport timeZones from \"../time-zones\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Timer = _ref => {\n  _s();\n  let {\n    cityCountry\n  } = _ref;\n  const styles = {\n    backgroundColor: \"lightblue\",\n    fontSize: \"2em\"\n  };\n  const [time, setTime] = useState(new Date());\n  function tic() {\n    setTime(new Date());\n  }\n  useEffect(() => {\n    const interval = setInterval(tic, 2000);\n    console.log(\"useEffect\");\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Current Time in \", cityCountry]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles,\n      children: time.toLocaleTimeString(undefined, {\n        timeZone: timeZones[3].name\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n};\n_s(Timer, \"I0+7QaEsXHXB0XO5JypI3yBHjPI=\");\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","timeZones","jsxDEV","_jsxDEV","Timer","_ref","_s","cityCountry","styles","backgroundColor","fontSize","time","setTime","Date","tic","interval","setInterval","console","log","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","style","toLocaleTimeString","undefined","timeZone","name","_c","$RefreshReg$"],"sources":["C:/Users/Pavel/Documents/Programming/React-CW/react-project/src/components/Timer.tsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport timeZones from \"../time-zones\";\r\ntype Props = {\r\n    cityCountry:string;\r\n}\r\nexport const Timer:React.FC<Props> = ({cityCountry}) => {\r\nconst styles: React.CSSProperties = {backgroundColor:\"lightblue\",\r\nfontSize: \"2em\"};\r\n\r\nconst [time, setTime] = useState<Date>(new Date());\r\n\r\nfunction tic() {\r\n    setTime(new Date());\r\n    \r\n}\r\n\r\nuseEffect(() => {\r\n    const interval = setInterval(tic, 2000);\r\n    console.log(\"useEffect\");\r\n    return () => clearInterval(interval);\r\n}, [])\r\n\r\n    return <div>\r\n        <h2 >Current Time in {cityCountry}</h2>\r\n        <p style={styles}>{time.toLocaleTimeString(undefined, {timeZone:timeZones[3].name})}</p>\r\n    </div>\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,SAAS,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAItC,OAAO,MAAMC,KAAqB,GAAGC,IAAA,IAAmB;EAAAC,EAAA;EAAA,IAAlB;IAACC;EAAW,CAAC,GAAAF,IAAA;EACnD,MAAMG,MAA2B,GAAG;IAACC,eAAe,EAAC,WAAW;IAChEC,QAAQ,EAAE;EAAK,CAAC;EAEhB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAO,IAAIc,IAAI,EAAE,CAAC;EAElD,SAASC,GAAGA,CAAA,EAAG;IACXF,OAAO,CAAC,IAAIC,IAAI,EAAE,CAAC;EAEvB;EAEAb,SAAS,CAAC,MAAM;IACZ,MAAMe,QAAQ,GAAGC,WAAW,CAACF,GAAG,EAAE,IAAI,CAAC;IACvCG,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxB,OAAO,MAAMC,aAAa,CAACJ,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEF,oBAAOZ,OAAA;IAAAiB,QAAA,gBACHjB,OAAA;MAAAiB,QAAA,GAAK,kBAAgB,EAACb,WAAW;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACvCrB,OAAA;MAAGsB,KAAK,EAAEjB,MAAO;MAAAY,QAAA,EAAET,IAAI,CAACe,kBAAkB,CAACC,SAAS,EAAE;QAACC,QAAQ,EAAC3B,SAAS,CAAC,CAAC,CAAC,CAAC4B;MAAI,CAAC;IAAC;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtF;AACV,CAAC;AAAAlB,EAAA,CArBYF,KAAqB;AAAA0B,EAAA,GAArB1B,KAAqB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}