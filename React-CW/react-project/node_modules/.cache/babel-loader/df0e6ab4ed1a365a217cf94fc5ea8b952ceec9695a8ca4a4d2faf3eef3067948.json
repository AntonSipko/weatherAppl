{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pavel\\\\Documents\\\\Programming\\\\React-CW\\\\react-project\\\\src\\\\components\\\\Timer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport timeZones from \"../time-zones\";\nimport { Input } from \"./input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Timer = _ref => {\n  _s();\n  let {\n    cityCountry\n  } = _ref;\n  const styles = {\n    backgroundColor: \"lightblue\",\n    fontSize: \"2em\"\n  };\n  const [time, setTime] = useState(new Date());\n  const [timeZone, setTimezone] = useState(getTimeZone(cityCountry));\n  const [citycountry, setCityCountry] = useState(cityCountry);\n  function tic() {\n    setTime(new Date());\n  }\n  useEffect(() => {\n    setTimezone(getTimeZone(cityCountry));\n  }, [cityCountry]);\n  useEffect(() => {\n    const interval = setInterval(tic, 2000);\n    console.log(\"useEffect\");\n    return () => clearInterval(interval);\n  }, []);\n  function getTimeZone(cityCountry) {\n    const index = timeZones.findIndex(tz => JSON.stringify(tz).includes(cityCountry));\n    return index < 0 ? undefined : timeZones[index].name;\n  }\n  function timezonecheck(value) {\n    const index = timeZones.findIndex(tz => JSON.stringify(tz).includes(value));\n    return index < 0 ? undefined : timeZones[index].name;\n  }\n  function submit(value) {\n    let res = \"\";\n    if (getTimeZone(value) == undefined) {\n      res = `This ${value} does not exists`;\n    } else {\n      setTimezone(value);\n      setCityCountry(value);\n    }\n    return res;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Current Time in \", citycountry]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles,\n      children: time.toLocaleTimeString(undefined, {\n        timeZone: timeZone\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      submitFn: submit,\n      buttonName: \"Check\",\n      placeHolder: \"Enter the zone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this);\n};\n_s(Timer, \"0V57NOdxTMcMdQoGxAgCnB0K+6M=\");\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","timeZones","Input","jsxDEV","_jsxDEV","Timer","_ref","_s","cityCountry","styles","backgroundColor","fontSize","time","setTime","Date","timeZone","setTimezone","getTimeZone","citycountry","setCityCountry","tic","interval","setInterval","console","log","clearInterval","index","findIndex","tz","JSON","stringify","includes","undefined","name","timezonecheck","value","submit","res","children","fileName","_jsxFileName","lineNumber","columnNumber","style","toLocaleTimeString","submitFn","buttonName","placeHolder","_c","$RefreshReg$"],"sources":["C:/Users/Pavel/Documents/Programming/React-CW/react-project/src/components/Timer.tsx"],"sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\r\nimport timeZones from \"../time-zones\";\r\nimport { Input } from \"./input\";\r\ntype Props = {\r\n    cityCountry:string;\r\n}\r\nexport const Timer:React.FC<Props> = ({cityCountry}) => {\r\nconst styles: React.CSSProperties = {backgroundColor:\"lightblue\",\r\nfontSize: \"2em\"};\r\n\r\nconst [time, setTime] = useState<Date>(new Date());\r\nconst [timeZone,setTimezone] = useState<string|undefined>(getTimeZone(cityCountry));\r\nconst [citycountry,setCityCountry]=useState<String>(cityCountry);\r\n\r\n\r\nfunction tic() {\r\n    setTime(new Date());\r\n    \r\n}\r\nuseEffect(\r\n () => {\r\n    setTimezone(getTimeZone(cityCountry));\r\n }, [cityCountry]\r\n)\r\n\r\nuseEffect(() => {\r\n    const interval = setInterval(tic, 2000);\r\n    console.log(\"useEffect\");\r\n    return () => clearInterval(interval);\r\n}, [])\r\nfunction getTimeZone(cityCountry:string): string | undefined{\r\n    const index = timeZones.findIndex(tz => JSON.stringify(tz).includes(cityCountry));\r\n    return index < 0 ? undefined : timeZones[index].name\r\n} \r\nfunction timezonecheck(value:string){\r\n    const index = timeZones.findIndex(tz => JSON.stringify(tz).includes(value));\r\n    return index < 0 ? undefined : timeZones[index].name;\r\n\r\n\r\n}\r\n\r\nfunction submit(value: string ):string {\r\n    let res:string=\"\";\r\n    if(getTimeZone(value)==undefined ){\r\n        res = `This ${value} does not exists`\r\n    }\r\n    else{\r\n         setTimezone(value);\r\n        setCityCountry(value);\r\n        \r\n    }\r\n    return res;\r\n\r\n\r\n\r\n\r\n}\r\n    return <div>\r\n        <h2 >Current Time in {citycountry}</h2>\r\n        <p style={styles}>{time.toLocaleTimeString(undefined,\r\n             {timeZone: timeZone})}</p>\r\n             <Input submitFn={submit} buttonName=\"Check\" placeHolder=\"Enter the zone\" />\r\n                </div>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}